{"version":3,"file":"component---src-pages-index-tsx-fb99a27ff0cb86ddffb1.js","mappings":"yPAWA,MA0DMA,GAAgBC,EAAAA,EAAAA,IAASC,ICrEqBC,EDqErB,gJCpExBC,IACHA,EAAMD,EAAQE,MAAM,IAEtBF,EAAQC,IAAMA,EDiEeF,EChEtBC,IALM,IAAqCA,EAASC,EDmF7D,MAAME,GAAOC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,oEAOPC,GAAMJ,EAAAA,EAAAA,GAAA,UAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,mBAINE,GAAKL,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,uKAaQP,EAAa,+BAK1Ba,GAAQN,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,wCAKRI,GAAQP,EAAAA,EAAAA,GAAA,WAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,+EAQd,MAlH8CK,IAC5C,MAAM,KAAEC,GAASD,GACX,MAAEE,GAAUD,EAAKE,kBAEvB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACd,KAAK,OACVa,EAAAA,EAAAA,KAACX,EAAM,CAAAU,UACLF,EAAAA,EAAAA,MAACb,EAAO,CAAAe,SAAA,EACNF,EAAAA,EAAAA,MAACP,EAAK,CAAAS,SAAA,EACJC,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CAACC,GAAG,OAAOC,KAAM,GAAIC,OAAQ,IAAIN,SAAC,YAGvCC,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CAACC,GAAG,KAAKC,KAAM,GAAIC,OAAQ,IAAKC,WAAY,GAAGP,SAAC,8BAIvDC,EAAAA,EAAAA,KAACT,EAAQ,CAAAQ,UACPF,EAAAA,EAAAA,MAACK,EAAAA,EAAI,CAACC,GAAG,IAAIC,KAAM,GAAIC,OAAQ,IAAKC,WAAY,GAAGP,SAAA,EACjDC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,WAAe,4CAAwCC,EAAAA,EAAAA,KAAA,eAGnEA,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CAACH,KAAK,QAAQI,MAAM,QAAQC,QAASA,KAAMC,OAmBlCxB,EAnBiD,cAoBvEyB,EAAAA,EAAAA,UAASzB,GADX,IAAwBA,CAnB2D,EAAAa,UACzEC,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CAACE,KAAM,GAAIC,OAAQ,IAAIN,SAAC,yBAMnCC,EAAAA,EAAAA,KAACR,EAAQ,CAAAO,UACPC,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CAACC,MAAM,UAAUC,MAeJC,EAf8BpB,GAkBlDqB,EAAAA,EAAAA,IAAgBD,GACpBE,QAAO,CAACC,EAAGC,IAAQA,EAAMC,IACzBC,KAAKC,IAAE,CACNnC,KAAMmC,EAAGC,YAAYV,MACrBW,KAAMF,EAAGG,OAAOD,KAChBE,KAAMC,EAAcL,EAAGC,YAAYG,kBARzC,IAA6BX,EAV7B,SAASY,EAAczC,GACrB,MAAO,CAAE0C,EAAOC,IAAOC,EAAAA,EAAAA,IAAQ5C,GAE/B,OAAU6C,OAAOH,GAAM,KAAKG,OAAOF,GAAI,GACzC,CAgBA,C","sources":["webpack://@portfolio/blog/./src/pages/index.tsx","webpack://@portfolio/blog/../../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["import { keyframes } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { Button, Container, Text } from '@justsloth/core'\nimport { graphql, navigate } from 'gatsby'\nimport { FC } from 'react'\n\nimport { ListTable } from '../components/ListTable'\nimport { Seo } from '../components/Seo'\nimport { IndexQuery, PageProps, Post } from '../types/type'\nimport { filteredByDraft, getTime } from '../utils'\n\nconst IndexPage: FC<PageProps<IndexQuery>> = (props) => {\n  const { data } = props\n  const { nodes } = data.allMarkdownRemark\n\n  return (\n    <Container>\n      <Seo name='홈' />\n      <Header>\n        <Wrapper>\n          <Title>\n            <Text as='span' size={48} weight={800}>\n              어서오세요!\n            </Text>\n            <Text as='h1' size={48} weight={800} lineHeight={56}>\n              어쩌다 Nest에 오신 걸 환영합니다.\n            </Text>\n          </Title>\n          <SubTitle>\n            <Text as='p' size={20} weight={400} lineHeight={40}>\n              <strong>자기주도학습</strong>을 통해 Nest.js에 대해 알아가는 것을 목표로 하는 스터디입니다. <br />\n            </Text>\n          </SubTitle>\n          <Button size='large' color='alert' onClick={() => moveToLocation('/intro')}>\n            <Text size={16} weight={800}>\n              스터디 자세히 알아보기\n            </Text>\n          </Button>\n        </Wrapper>\n      </Header>\n      <Contents>\n        <ListTable title='최근 공지사항' list={filteredNewestPosts(nodes)} />\n      </Contents>\n    </Container>\n  )\n\n  function getSimpleDate(target: string): string {\n    const [, month, day] = getTime(target)\n\n    return `${Number(month)}월 ${Number(day)}일`\n  }\n\n  function moveToLocation(target: string): void {\n    navigate(target)\n  }\n\n  function filteredNewestPosts(posts: Post[]): { name: string; slug: string; date: string }[] {\n    const cuttingCount = 5\n\n    return filteredByDraft(posts)\n      .filter((_, idx) => idx < cuttingCount + 1)\n      .map((it) => ({\n        name: it.frontmatter.title,\n        slug: it.fields.slug,\n        date: getSimpleDate(it.frontmatter.date)\n      }))\n  }\n}\n\nconst HandAnimation = keyframes`\n  0% {\n    transform: rotateZ(0);\n  }\n\n  50% {\n    transform: rotateZ(30deg);\n  }\n\n  100% {\n    transform: rotateZ(0deg);\n  }\n`\n\nconst Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n  padding: 2rem;\n`\n\nconst Header = styled.header`\n  padding: 2rem 0;\n`\n\nconst Title = styled.div`\n  margin-bottom: 1.5rem;\n  max-width: 1200px;\n\n  & > span:first-of-type {\n    position: relative;\n\n    &::after {\n      position: absolute;\n      right: -4rem;\n      top: -0.5rem;\n      content: '✋';\n      display: block;\n      animation: ${HandAnimation} 1s ease-in-out infinite;\n    }\n  }\n`\n\nconst SubTitle = styled.div`\n  max-width: 1000px;\n  margin-bottom: 2rem;\n`\n\nconst Contents = styled.section`\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n  padding: 2rem;\n`\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date\n          image {\n            publicURL\n          }\n          draft\n        }\n      }\n    }\n  }\n`\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}"],"names":["HandAnimation","keyframes","_templateObject","strings","raw","slice","Wrapper","_styled","target","name","styles","Header","Title","SubTitle","Contents","props","data","nodes","allMarkdownRemark","_jsxs","Container","children","_jsx","Seo","Text","as","size","weight","lineHeight","Button","color","onClick","moveToLocation","navigate","ListTable","title","list","posts","filteredByDraft","filter","_","idx","cuttingCount","map","it","frontmatter","slug","fields","date","getSimpleDate","month","day","getTime","Number"],"sourceRoot":""}